Option Compare Database

' ***************************************** Свойства поля
Function getProperties(ByRef fld As field2, propname As String) As String
    On Error Resume Next
    getProperties = fld.Properties(propname)
    If Err.Number <> 0 Then
        Debug.Print fld.Name; " "; Err.Description
    End If
End Function

' ***************************************** SQL создания полей
Function CreateFieldStatement(ByRef td As TableDef, ByRef fld As field2) As String
    result = "  `" & fld.Name & "`"
    Select Case fld.Type
        Case dbDate
            prop = getProperties(fld, "format")
            Select Case prop
                Case "general date"
                    result = result & " DATETIME(0)"
                Case "short date"
                    result = result & " DATE"
                Case "short time"
                    result = result & " TIME"
                Case Else
                    result = result & " DATETIME(0)"
            End Select
        Case dbTime
            Stop
        Case dbTimeStamp
            Stop
        Case dbMemo    'Memo/Long Text, Hyperlinks
            result = result & " LONGTEXT"
        Case dbByte
            result = result & " TINYINT(3) UNSIGNED"
        Case dbInteger
            result = result & " INTEGER"
        Case dbLong
            result = result & " INTEGER"
        Case dbNumeric, dbDecimal
            result = result & " DECIMAL(" & ADOXCol.Precision & ", " & ADOXCol.NumericScale & ")"
        Case dbSingle, dbFloat
            result = result & " FLOAT"
        Case dbDouble
            result = result & " DOUBLE"
        Case dbGUID
            result = result & " GUID"
        Case dbBoolean
            result = result & " TINYINT"
        Case dbCurrency
            result = result & " DECIMAL(19,4)"
        Case dbText
            result = result & " VARCHAR(" & fld.Size & ")"
        Case Else
            result = result & " ????"
            Stop
    End Select

    If fld.DefaultValue <> "" Then
        If fld.Type = dbBoolean Then
            result = result & " DEFAULT " & IIf(fld.DefaultValue = "NO", 0, 1)
        Else
            result = result & " DEFAULT " & fld.DefaultValue
        End If
    End If

    If (fld.Attributes And dbAutoIncrField) Then result = result & " AUTO_INCREMENT"
    If fld.Required Then result = result & " NOT NULL"
    CreateFieldStatement = result & "," & vbCrLf
End Function

' ***************************************** SQL создания таблицы
Function CreateTableStatement(ByRef td As TableDef)
    Dim fld As field2
    result = result & "CREATE TABLE `" & td.Name & "`(" & vbCrLf
    For Each fld In td.Fields
        result = result & CreateFieldStatement(td, fld)
        DoEvents: Debug.Print td.Name & " " & fld.Name
    Next fld
    result = result & GenPKStatement(td) ' GET PK Field to define the INDEX
    Do While Right(result, 1) = Chr(10) Or Right(result, 1) = Chr(13) Or Right(result, 1) = ","
        result = Mid(result, 1, Len(result) - 1)
    Loop
    CreateTableStatement = result & ")" & ";"
End Function

' *****************************************
Public Function GenPKStatement(tdf) As String
    Dim sPkFlds               As String
    Dim aPkFlds()             As String
    If tdf.Indexes.Count > 0 Then
        sPkFlds = Replace(tdf.Indexes("PrimaryKey").Fields, "+", "")
        aPkFlds = Split(sPkFlds, ";")
        If UBound(aPkFlds) = 0 Then
            GenPKStatement = "  PRIMARY KEY (`" & sPkFlds & "`)" & vbCrLf
        End If
    End If
End Function
